import { GetTokenParams, getToken } from "next-auth/jwt";
import { NextRequest, NextResponse } from "next/server";
export { default } from "next-auth/middleware";

export const config = {
  matcher: [
    "/((?!_next/static|favicon.ico|login|).*)",
    "/students",
    "/attendance",
  ],
  // callbacks: {
  //   authorized({ req, token }) {
  //     if (token) return true; // If there is a token, the user is authenticated
  //   },
  // },
  pages: {
    signIn: "/login",
    error: "/api/auth/error",
  },
};
// export async function middleware(request: NextResponse) {
//   const token = await getToken({ req: request });
//   if (!token) {
//     return NextResponse.redirect(`${process.env.NEXT_PUBLIC_URL}/login`);
//   }

//   return request;
// }

// export async function middleware(request: NextRequest) {
//   const token = await getToken({ req: request });

//   // Check if the requested path needs authentication
//   const protectedPaths = ["/attendance", "/students"];
//   const requiresAuth = protectedPaths.some((path) =>
//     request.nextUrl.pathname.startsWith(path)
//   );

//   if (requiresAuth && !token) {
//     return NextResponse.redirect(`${process.env.NEXT_PUBLIC_URL}/login`);
//   }

//   return request;
// }
